//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyProject.Services
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://my-ns/1.0")]
    public partial class ServiceFault
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://my-ns/3.0")]
    public partial class ServiceCResponseDef
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://my-ns/3.0")]
    public partial class ServiceCRequestDef
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service-root", ConfigurationName="MyProject.Services.ServiceAService")]
    public interface ServiceAService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service-root/ServiceAService/ServiceAOperationRequest", ReplyAction="http://service-root/ServiceAService/ServiceAOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyProject.Services.ServiceFault), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="ServiceFault", Namespace="http://my-ns/1.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyProject.Services.ServiceAOperationResponse> ServiceAOperationAsync(MyProject.Services.ServiceAOperationRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://my-ns/3.0")]
    public partial class ServiceARequestDef
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://my-ns/3.0")]
    public partial class ServiceAResponseDef
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ServiceAOperationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service-root", Order=0)]
        public MyProject.Services.ServiceARequestDef ServiceARequest;
        
        public ServiceAOperationRequest()
        {
        }
        
        public ServiceAOperationRequest(MyProject.Services.ServiceARequestDef ServiceARequest)
        {
            this.ServiceARequest = ServiceARequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ServiceAOperationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service-root", Order=0)]
        public MyProject.Services.ServiceAResponseDef ServiceAResponse;
        
        public ServiceAOperationResponse()
        {
        }
        
        public ServiceAOperationResponse(MyProject.Services.ServiceAResponseDef ServiceAResponse)
        {
            this.ServiceAResponse = ServiceAResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ServiceAServiceChannel : MyProject.Services.ServiceAService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceAServiceClient : System.ServiceModel.ClientBase<MyProject.Services.ServiceAService>, MyProject.Services.ServiceAService
    {
        
        public ServiceAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MyProject.Services.ServiceAOperationResponse> ServiceAOperationAsync(MyProject.Services.ServiceAOperationRequest request)
        {
            return base.Channel.ServiceAOperationAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service-root", ConfigurationName="MyProject.Services.ServiceBService")]
    public interface ServiceBService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service-root/ServiceBService/ServiceBOperationRequest", ReplyAction="http://service-root/ServiceBService/ServiceBOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyProject.Services.ServiceFault), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="ServiceFault", Namespace="http://my-ns/1.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyProject.Services.ServiceBOperationResponse> ServiceBOperationAsync(MyProject.Services.ServiceBOperationRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://my-ns/3.0")]
    public partial class ServiceBRequestDef
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://my-ns/3.0")]
    public partial class ServiceBResponseDef
    {
        
        private string propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ServiceBOperationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service-root", Order=0)]
        public MyProject.Services.ServiceBRequestDef ServiceBRequest;
        
        public ServiceBOperationRequest()
        {
        }
        
        public ServiceBOperationRequest(MyProject.Services.ServiceBRequestDef ServiceBRequest)
        {
            this.ServiceBRequest = ServiceBRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ServiceBOperationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service-root", Order=0)]
        public MyProject.Services.ServiceBResponseDef ServiceBResponse;
        
        public ServiceBOperationResponse()
        {
        }
        
        public ServiceBOperationResponse(MyProject.Services.ServiceBResponseDef ServiceBResponse)
        {
            this.ServiceBResponse = ServiceBResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ServiceBServiceChannel : MyProject.Services.ServiceBService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceBServiceClient : System.ServiceModel.ClientBase<MyProject.Services.ServiceBService>, MyProject.Services.ServiceBService
    {
        
        public ServiceBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MyProject.Services.ServiceBOperationResponse> ServiceBOperationAsync(MyProject.Services.ServiceBOperationRequest request)
        {
            return base.Channel.ServiceBOperationAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service-root", ConfigurationName="MyProject.Services.ServiceCService")]
    public interface ServiceCService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service-root/service-c-service/service-c-operation", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyProject.Services.ServiceFault), Action="http://service-root/service-c-service/service-c-operation", Name="ServiceFault", Namespace="http://my-ns/1.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyProject.Services.ServiceCOperationResponse> ServiceCOperationAsync(MyProject.Services.ServiceCOperationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ServiceCOperationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service-root", Order=0)]
        public MyProject.Services.ServiceCRequestDef ServiceCRequest;
        
        public ServiceCOperationRequest()
        {
        }
        
        public ServiceCOperationRequest(MyProject.Services.ServiceCRequestDef ServiceCRequest)
        {
            this.ServiceCRequest = ServiceCRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ServiceCOperationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service-root", Order=0)]
        public MyProject.Services.ServiceCResponseDef ServiceCResponse;
        
        public ServiceCOperationResponse()
        {
        }
        
        public ServiceCOperationResponse(MyProject.Services.ServiceCResponseDef ServiceCResponse)
        {
            this.ServiceCResponse = ServiceCResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ServiceCServiceChannel : MyProject.Services.ServiceCService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceCServiceClient : System.ServiceModel.ClientBase<MyProject.Services.ServiceCService>, MyProject.Services.ServiceCService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceCServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceCServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceCServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceCServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceCServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceCServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceCServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceCServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MyProject.Services.ServiceCOperationResponse> ServiceCOperationAsync(MyProject.Services.ServiceCOperationRequest request)
        {
            return base.Channel.ServiceCOperationAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceAServicePort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceBServicePort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceCServicePort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceAServicePort))
            {
                return new System.ServiceModel.EndpointAddress("https://service-a-location/");
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceBServicePort))
            {
                return new System.ServiceModel.EndpointAddress("https://service-b-location/");
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceCServicePort))
            {
                return new System.ServiceModel.EndpointAddress("https://service-c-location/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ServiceAServicePort,
            
            ServiceBServicePort,
            
            ServiceCServicePort,
        }
    }
}
